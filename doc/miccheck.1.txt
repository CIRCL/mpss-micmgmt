// Copyright 2010-2013 Intel Corporation.
//
// This library is free software; you can redistribute it and/or modify it
// under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation, version 2.1.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// Disclaimer: The codes contained in these modules may be specific
// to the Intel Software Development Platform codenamed Knights Ferry,
// and the Intel product codenamed Knights Corner, and are not backward
// compatible with other Intel products. Additionally, Intel will NOT
// support the codes or instruction set in future products.
//
// Intel offers no warranty of any kind regarding the code. This code is
// licensed on an "AS IS" basis and Intel is not obligated to provide
// any support, assistance, installation, training, or other services
// of any kind. Intel is also not obligated to provide any updates,
// enhancements or extensions. Intel specifically disclaims any warranty
// of merchantability, non-infringement, fitness for any particular
// purpose, and any other warranty.
//
// Further, Intel disclaims all liability of any kind, including but
// not limited to liability for infringement of any proprietary rights,
// relating to the use of the code, even if Intel is notified of the
// possibility of such liability. Except as expressly stated in an Intel
// license agreement provided with this code and agreed upon with Intel,
// no license, express or implied, by estoppel or otherwise, to any
// intellectual property rights is granted herein.

MICCHECK(1)
===========

NAME
----
miccheck - A utility to verify the configuration and current status of the Intel(R) Xeon
Phi(TM) coprocessor software stack.


SYNOPSIS
--------
*miccheck(.py)?* [options]


////
This is an asciiDoc formatted file, used to create manpage entries for the miccheck utility.
In order for a2x to correctly convert this file into man-page format, there can not be
anything other than:
TITLE
NAME
SYNOPSIS
as the first three sections of this file.  (That's why the comments have been placed
here.)

In order to convert this file into man-page format (ie. a file that can be read by 'man')
run the following command:

a2x --doctype manpage --format manpage <fileName>

where <fileName> is the name of this file (it should be miccheck.1.txt).
////


DESCRIPTION
-----------
*miccheck(1)* is a utility which performs sanity checks on a host system with
Intel(R) Xeon Phi(TM) coprocessors installed, by running a suite
of diagnostic tests. By default, a subset of all available tests are run;
tests can also be enabled individually. The default behavior is to run all enabled
tests on the host system first, and then on all Intel(R) Xeon Phi(TM)
coprocessors in turn.

There are two forms of the miccheck utility in Linux: (1) is a python program,
callable directly as 'miccheck.py'; (2) is a binary program, executable as
'miccheck'. Both versions behave exactly the same and will produce the same
output.


OPTIONS
-------
'General' ::
  *-h* or *--help* :::
      Display the help message.

  *-v* or *--verbose* :::
      Enables verbosity.

  *-d* or *--device* :::
      Select device on which to run. Example: --device=0. Only one device can be selected.

'Host tests available' ::
    *--pci_numdev*  ::: Check whether Intel(R) Xeon Phi(TM) coprocessors are detected
over PCI. This test is 'enabled' by default.
    *--driver_loaded*  ::: Check whether Intel(R) Xeon Phi(TM) driver is loaded.
This test is 'enabled' by default.
    *--driver_numdev*  ::: Check whether the device driver detected the same
number of devices as PCI enumeration did. This test is 'enabled' by default.
    *--mpssd_loaded*  ::: Check whether MPSS daemon is running. This test is
'enabled' by default.
    *--driver_ver*  ::: Check whether the loaded device driver version is
correct. This test is 'disabled' by default.

'Device tests available' ::
    *--dev_state*  ::: Check whether device state is online and its postcode
is FF. This test is 'enabled' by default.
    *--dev_rasdaemon*  ::: Check whether the network interface of the device
can be pinged. This test is 'enabled' by default.
    *--flash_ver*  ::: Check whether the running flash version of the device
is correct . This test is 'enabled' by default.
    *--ping*  ::: Check whether the network interface of the device can pinged.
This test is 'disabled' by default.
    *--ssh*  ::: Check whether the network interface of the device can be
accessed through SSH. This test is 'disabled' by default.

EXAMPLES
--------
//The 'Example n.' tags are auto-generated by asciidoc
[[normal_example]]
.Normal usage
=====
The following example will run all enabled tests by default.
....
$ miccheck

Executing default tests for host
  Test 1: Check number of devices the OS sees in the system ... pass
  Test 2: Check mic driver is loaded ... pass
  Test 3: Check number of devices driver sees in the system ... pass
  Test 4: Check mpssd daemon is running ... pass
Executing default tests for device: 0
  Test 5 (mic0): Check device is in online state and its postcode is FF ... pass
  Test 6 (mic0): Check ras daemon is available in device ... pass
  Test 7 (mic0): Check running flash version is correct ... pass
Executing default tests for device: 1
  Test 8 (mic1): Check device is in online state and its postcode is FF ... pass
  Test 9 (mic1): Check ras daemon is available in device ... pass
  Test 10 (mic1): Check running flash version is correct ... pass

Status: OK.
....
====

[[selectedtests_example]]
.Enabling optional tests
====
....
$ miccheck --ssh --ping

....
====


BUGS
----
No bugs listed so far.


AUTHOR
------
*miccheck(1)* was written by Intel for use with Intel Intel(R) Xeon Phi(TM)
coprocessors.
